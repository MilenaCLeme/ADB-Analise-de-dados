-- create
CREATE TABLE DEPARTAMENTO (
  DEPARTAMENTO_ID INT AUTO_INCREMENT PRIMARY KEY,
  NOME VARCHAR(100)
);

CREATE TABLE GERENTE (
  GERENTE_ID INT AUTO_INCREMENT PRIMARY KEY,
  NOME VARCHAR(100)
);

CREATE TABLE EMPREGADO (
  EMPREGADO_ID INT AUTO_INCREMENT PRIMARY KEY,
  NOME VARCHAR(100),
  DEPARTAMENTO_ID INT,
  SALARIO DECIMAL(10, 2),
  DATA_ADMISSAO DATE,
  GERENTE_ID INT,
  CARGO VARCHAR(100),
  FOREIGN KEY (DEPARTAMENTO_ID) REFERENCES DEPARTAMENTO(DEPARTAMENTO_ID),
  FOREIGN KEY (GERENTE_ID) REFERENCES GERENTE(GERENTE_ID)
);

-- exercicio

-- 1. Liste todos os empregados que pertencem ao departamento cujo nome é 'Marketing'.

SELECT * FROM EMPREGADO AS EMP INNER JOIN DEPARTAMENTO AS DEP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID WHERE DEP.NOME = 'Marketing'

SELECT EMP.EMPREGADO_ID, EMP.NOME, DEP.NOME, EMP.SALARIO, EMP.DATA_ADMISSAO, EMP.GERENTE_ID   FROM EMPREGADO AS EMP INNER JOIN DEPARTAMENTO AS DEP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID WHERE DEP.NOME = 'Marketing'

-- 2. Crie uma view chamada View_Marketing_Empregados que contenha todos os empregados do departamento 'Marketing'.

CREATE VIEW View_Marketing_Empregados AS SELECT EMP.EMPREGADO_ID, EMP.NOME AS EMPREGADO_NOME, DEP.NOME AS DEPARTAMENTO_NOME, EMP.SALARIO, EMP.DATA_ADMISSAO, EMP.GERENTE_ID   FROM EMPREGADO AS EMP INNER JOIN DEPARTAMENTO AS DEP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID WHERE DEP.NOME = 'Marketing';

SELECT * FROM View_Marketing_Empregados;

-- 3. Liste o nome do departamento e a média dos salários de seus empregados.

SELECT DEP.NOME AS NOME_DEPARTAMENTO, AVG(EMP.SALARIO) AS MEDIA_SALARIAL FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID GROUP BY DEP.NOME;

-- 4. Crie uma view chamada View_Media_Salarios que mostre o nome do departamento e a média dos salários dos empregados.

CREATE VIEW View_Media_Salarios AS SELECT DEP.NOME AS NOME_DEPARTAMENTO, AVG(EMP.SALARIO) AS MEDIA_SALARIAL FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID GROUP BY DEP.NOME;

SELECT * FROM View_Media_Salarios;

-- 5. Liste todos os empregados que têm um salário acima da média dos salários do seu departamento.

SELECT * FROM EMPREGADO AS EMP INNER JOIN (SELECT EMP2.DEPARTAMENTO_ID, AVG(EMP2.SALARIO) AS MEDIA_SALARIAL FROM EMPREGADO AS EMP2 GROUP BY EMP2.DEPARTAMENTO_ID) AS AVG_SALARIO ON EMP.DEPARTAMENTO_ID = AVG_SALARIO.DEPARTAMENTO_ID WHERE EMP.SALARIO > AVG_SALARIO.MEDIA_SALARIAL;


-- 6 .Crie uma view chamada View_Empregados_Acima_Media que contenha os empregados que têm um salário acima da média do seu departamento.

CREATE VIEW View_Empregados_Acima_Media AS SELECT * FROM EMPREGADO AS EMP INNER JOIN (SELECT EMP2.DEPARTAMENTO_ID, AVG(EMP2.SALARIO) AS MEDIA_SALARIAL FROM EMPREGADO AS EMP2 GROUP BY EMP2.DEPARTAMENTO_ID) AS AVG_SALARIO ON EMP.DEPARTAMENTO_ID = AVG_SALARIO.DEPARTAMENTO_ID WHERE EMP.SALARIO > AVG_SALARIO.MEDIA_SALARIAL;

SELECT * FROM View_Media_Salarios;

--7. Liste todos os departamentos que têm mais de 5 empregados.

SELECT DEPARTAMENTO_ID, DEPARTAMENTO_NOME, COUNT_DEPARTAMENTO.TOTAL_PESSOAS AS TOTAL_PESSOAS FROM DEPARTAMENTO AS DEP INNER JOIN (SELECT DEPARTAMENTO_ID, COUNT(EMP2.DEPARTAMENTO_ID) AS TOTAL_PESSOAS FROM EMPREGADO AS EMP2 GROUP BY EMP2.DEPARTAMENTO_ID) AS COUNT_DEPARTAMENTO ON DEP.DEPARTAMENTO_ID = COUNT_DEPARTAMENTO.DEPARTAMENTO_ID WHERE COUNT_DEPARTAMENTO.TOTAL_PESSOAS > 5;

-- 8.Crie uma view chamada View_Departamentos_Com_Muitos_Empregados que contenha os departamentos com mais de 5 empregados.

CREATE VIEW View_Departamentos_Com_Muitos_Empregados AS SELECT DEPARTAMENTO_ID, DEPARTAMENTO_NOME, COUNT_DEPARTAMENTO.TOTAL_PESSOAS AS TOTAL_PESSOAS FROM DEPARTAMENTO AS DEP INNER JOIN (SELECT DEPARTAMENTO_ID, COUNT(EMP2.DEPARTAMENTO_ID) AS TOTAL_PESSOAS FROM EMPREGADO AS EMP2 GROUP BY EMP2.DEPARTAMENTO_ID) AS COUNT_DEPARTAMENTO ON DEP.DEPARTAMENTO_ID = COUNT_DEPARTAMENTO.DEPARTAMENTO_ID WHERE COUNT_DEPARTAMENTO.TOTAL_PESSOAS > 5;

SELECT * FROM View_Departamentos_Com_Muitos_Empregados;

-- 9. Liste todos os empregados juntamente com o nome de seus gerentes.

SELECT * FROM EMPREGADO AS EMP INNER JOIN GERENTE AS GE ON GE.GERENTE_ID = EMP.GERENTE_ID;

-- 10. Crie uma view chamada View_Empregados_Gerentes que mostre todos os empregados e o nome de seus gerentes.

CREATE VIEW View_Empregados_Gerentes AS SELECT * FROM EMPREGADO AS EMP INNER JOIN GERENTE AS GE ON GE.GERENTE_ID = EMP.GERENTE_ID;

SELECT * FROM View_Empregados_Gerentes;

-- 11 .Liste todos os departamentos que não têm empregados.

SELECT DEP.DEPARTAMENTO_ID, DEP.NOME FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP ON DEP.DEPARTAMENTO_ID = EMP.DEPARTAMENTO_ID GROUP BY DEP.NAME, DEP.DEPARTAMENTO_ID HAVING EMP.DEPARTAMENTO_ID IS NOT NULL;

-- 12.Crie uma view chamada View_Departamentos_Sem_Empregados que contenha os departamentos que não têm empregados.

CREATE VIEW View_Departamentos_Sem_Empregados AS SELECT DEP.DEPARTAMENTO_ID, DEP.NOME FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP ON DEP.DEPARTAMENTO_ID = EMP.DEPARTAMENTO_ID GROUP BY DEP.NAME, DEP.DEPARTAMENTO_ID HAVING EMP.DEPARTAMENTO_ID IS NOT NULL;

SELECT * FROM View_Departamentos_Sem_Empregados;

-- 13. Liste todos os empregados que têm um salário acima de R$ 5000.

SELECT * FROM EMPREGADO AS EMP WHERE EMP.SALARIO > 5000;

-- 14. Crie uma view chamada View_Salarios_Acima_5000 que contenha os empregados com salário acima de R$ 5000.

CREATE VIEW View_Salarios_Acima_5000 AS SELECT * FROM EMPREGADO AS EMP WHERE EMP.SALARIO > 5000;

SELECT * FROM View_Salarios_Acima_5000;

-- 15. Liste todos os empregados que foram admitidos nos últimos 6 meses.

SELECT * FROM EMPREGADO WHERE DATA_ADMISSAO >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);


-- 16.Crie uma view chamada View_Admitidos_Recentemente que contenha os empregados admitidos nos últimos 6 meses.

CREATE VIEW View_Admitidos_Recentemente AS SELECT * FROM EMPREGADO WHERE DATA_ADMISSAO >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);

SELECT * FROM View_Admitidos_Recentemente;

-- 17.Liste o número de empregados em cada cargo.

SELECT DEP.DEPARTAMENTO_ID, DEP.NOME AS DEPARTAMENTO_NOME, COUNT(EMP.DEPARTAMENTO_ID) FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID GROUP BY DEP.NOME, DEP.DEPARTAMENTO_ID;

-- 18.Crie uma view chamada View_Empregados_Por_Cargo que mostre o número de empregados em cada cargo.

CREATE View_Empregados_Por_Cargo AS ELECT DEP.DEPARTAMENTO_ID, DEP.NOME AS DEPARTAMENTO_NOME, COUNT(EMP.DEPARTAMENTO_ID) FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP ON EMP.DEPARTAMENTO_ID = DEP.DEPARTAMENTO_ID GROUP BY DEP.NOME, DEP.DEPARTAMENTO_ID;

SELECT * FROM View_Empregados_Por_Cargo;

-- 19.Liste todos os empregados do departamento 'Finance' que têm um salário acima da média dos salários dos empregados desse departamento.

SELECT * FROM EMPREGADO AS EMP INNER JOIN (SELECT EMP2.DEPARTAMENTO_ID, AVG(EMP2.SALARIO) AS MEDIA FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP2 ON DEP.DEPARTAMENTO_ID = EMP2.DEPARTAMENTO_ID WHERE DEP.NOME = 'Finance' GROUP BY DEPARTAMENTO_ID) AS TBL ON TBL.DEPARTAMENTO_ID = EMP.DEPARTAMENTO_ID WHERE EMP.SALARIO > TBL.MEDIA AND EMP.DEPARTAMENTO_ID = TBL.DEPARTAMENTO_ID;

-- 20.Crie uma view chamada View_Finance_Salarios_Acima_Media que contenha os empregados do departamento 'Finance' com salário acima da média.

CREATE View_Finance_Salarios_Acima_Media AS SELECT * FROM EMPREGADO AS EMP INNER JOIN (SELECT EMP2.DEPARTAMENTO_ID, AVG(EMP2.SALARIO) AS MEDIA FROM DEPARTAMENTO AS DEP INNER JOIN EMPREGADO AS EMP2 ON DEP.DEPARTAMENTO_ID = EMP2.DEPARTAMENTO_ID WHERE DEP.NOME = 'Finance' GROUP BY DEPARTAMENTO_ID) AS TBL ON TBL.DEPARTAMENTO_ID = EMP.DEPARTAMENTO_ID WHERE EMP.SALARIO > TBL.MEDIA AND EMP.DEPARTAMENTO_ID = TBL.DEPARTAMENTO_ID;